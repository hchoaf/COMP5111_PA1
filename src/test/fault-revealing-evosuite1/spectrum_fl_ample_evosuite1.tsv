Method Signature	Statement	Suspicious Score	Ranking
415	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.3249787596	2
416	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	if l2 >= l1 goto return 1	0.3249787596	2
416	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	l2 = 1	0.3249787596	2
412	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	$stack3 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>(l0)	0.2863211555	4
412	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	if $stack3 == 0 goto l1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.2863211555	4
559	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()	0.2782497876	15
560	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack11 = new java.util.ArrayList	0.2782497876	15
560	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	specialinvoke $stack11.<java.util.ArrayList: void <init>()>()	0.2782497876	15
561	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l4 = 0	0.2782497876	15
562	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack12 = l2[0]	0.2782497876	15
562	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l5 = staticinvoke <java.lang.Character: int getType(char)>($stack12)	0.2782497876	15
563	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack14 = lengthof l2	0.2782497876	15
563	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack15 = $stack14 - 1	0.2782497876	15
563	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l6 >= $stack15 goto $stack16 = new java.lang.String	0.2782497876	15
563	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l6 = 0 + 1	0.2782497876	15
580	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack16 = new java.lang.String	0.2782497876	15
580	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack17 = lengthof l2	0.2782497876	15
580	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack18 = $stack17 - l4	0.2782497876	15
580	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	interfaceinvoke $stack11.<java.util.List: boolean add(java.lang.Object)>($stack16)	0.2782497876	15
580	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	specialinvoke $stack16.<java.lang.String: void <init>(char[],int,int)>(l2, l4, $stack18)	0.2782497876	15
581	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack20 = <comp5111.assignment.cut.Subject$ArrayTasks: java.lang.String[] EMPTY_STRING_ARRAY>	0.2782497876	15
581	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack21 = interfaceinvoke $stack11.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($stack20)	0.2782497876	15
581	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack22 = (java.lang.String[]) $stack21	0.2782497876	15
581	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	return $stack22	0.2782497876	15
563	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	goto [?= $stack14 = lengthof l2]	0.2701784197	30
563	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l6 = l6 + 1	0.2701784197	30
564	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack23 = l2[l6]	0.2701784197	30
564	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l7 = staticinvoke <java.lang.Character: int getType(char)>($stack23)	0.2701784197	30
565	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l7 != l5 goto (branch)	0.2701784197	30
568	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l1 == 0 goto $stack25 = new java.lang.String	0.2701784197	30
575	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack25 = new java.lang.String	0.2701784197	30
575	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack26 = l6 - l4	0.2701784197	30
575	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	interfaceinvoke $stack11.<java.util.List: boolean add(java.lang.Object)>($stack25)	0.2701784197	30
575	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	specialinvoke $stack25.<java.lang.String: void <init>(char[],int,int)>(l2, l4, $stack26)	0.2701784197	30
576	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l4 = l6	0.2701784197	30
578	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l5 = l7	0.2701784197	30
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	$stack2 = l0 % 100	0.2446898895	37
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	if $stack2 != 0 goto $stack4 = 1	0.2446898895	37
535	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>(l0, 0)	0.2434154630	39
535	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String)>	return $stack1	0.2434154630	39
566	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	goto [?= l6 = l6 + 1]	0.2340696686	41
553	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l0 != null goto $stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()	0.2315208156	43
556	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack9 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()	0.2315208156	43
556	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if $stack9 == 0 goto l2 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()	0.2315208156	43
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	$stack2 = 1	0.2255734919	45
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	goto [?= return $stack2]	0.2255734919	45
421	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	return 1	0.2179269329	47
1728	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	if l0 <= 1900 goto $stack1 = l0 & 3	0.2060322855	50
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	$stack1 = l0 & 3	0.2060322855	50
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	$stack4 = 1	0.2060322855	50
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	goto [?= return $stack4]	0.2060322855	50
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	if $stack1 == 0 goto $stack4 = 1	0.2060322855	50
1732	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	return $stack4	0.2060322855	50
1313	<comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>(l0)	0.1979609176	54
1313	<comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>	return $stack1	0.1979609176	54
1609	<comp5111.assignment.cut.Subject$ArrayTasks: int getLength(java.lang.Object)>	if l0 == null goto $stack1 = 0	0.1881903144	56
1728	<comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>	if l0 >= 2100 goto $stack1 = l0 & 3	0.1818181818	57
323	<comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>	if l0 != null goto $stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.1813933730	58
323	<comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>	return $stack1	0.1813933730	58
345	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	l1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>(l0)	0.1788445200	60
346	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	if l1 != 0 goto l2 = 0	0.1788445200	60
323	<comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>	$stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.1720475786	62
1609	<comp5111.assignment.cut.Subject$ArrayTasks: int getLength(java.lang.Object)>	$stack1 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(l0)	0.1694987256	63
934	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l0 != null goto $stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)	0.1682242991	65
1536	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>	if l0 < 65 goto $stack1 = 0	0.1682242991	65
1536	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>	return $stack1	0.1682242991	65
448	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int length()>()	0.1601529312	67
937	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack15 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)	0.1588785047	68
937	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack15 == 0 goto $stack16 = newarray (java.lang.String)[3]	0.1588785047	68
451	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	l1 = virtualinvoke l0.<java.lang.String: int length()>()	0.1508071368	71
452	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	if l1 >= 2 goto l2 = l1 - 1	0.1508071368	71
1609	<comp5111.assignment.cut.Subject$ArrayTasks: int getLength(java.lang.Object)>	return $stack1	0.1508071368	71
663	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	if l0 == null goto return 1	0.1495327103	73
1536	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>	$stack1 = 0	0.1495327103	73
1619	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$ArrayTasks: int getLength(java.lang.Object)>(l0)	0.1414613424	76
1619	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>	if $stack1 != 0 goto $stack2 = 0	0.1414613424	76
1619	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>	return $stack2	0.1414613424	76
490	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	$stack3 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>(l0)	0.1321155480	79
490	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	if $stack3 == 0 goto $stack4 = virtualinvoke l0.<java.lang.String: int length()>()	0.1321155480	79
1609	<comp5111.assignment.cut.Subject$ArrayTasks: int getLength(java.lang.Object)>	goto [?= return $stack1]	0.1321155480	79
455	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	l2 = l1 - 1	0.1308411215	93
456	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	l3 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)	0.1308411215	93
457	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	l4 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l2)	0.1308411215	93
458	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	if l4 != 10 goto return l3	0.1308411215	93
461	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	return l3	0.1308411215	93
663	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	if l1 != null goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.1308411215	93
941	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack16 = newarray (java.lang.String)[3]	0.1308411215	93
941	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack16[0] = "0x"	0.1308411215	93
941	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack16[1] = "0X"	0.1308411215	93
941	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack16[2] = "#"	0.1308411215	93
942	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l2 = virtualinvoke l0.<java.lang.String: int length()>()	0.1308411215	93
943	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack144 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.1308411215	93
943	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack145 = 0	0.1308411215	93
943	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack18 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.1308411215	93
943	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack144 != 45 goto $stack145 = 0	0.1308411215	93
943	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack18 == 43 goto $stack145 = 1	0.1308411215	93
943	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l3 = $stack145	0.1308411215	93
944	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l4 = 0	0.1308411215	93
945	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l7 >= l6 goto (branch)	0.1308411215	93
945	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l6 = lengthof $stack16	0.1308411215	93
945	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l7 = 0	0.1308411215	93
945	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l8 = $stack16[l7]	0.1308411215	93
946	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack138 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l8, l3)	0.1308411215	93
946	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack138 == 0 goto l7 = l7 + 1	0.1308411215	93
951	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l4 <= 0 goto $stack19 = l2 - 1	0.1308411215	93
349	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	if l2 >= l1 goto return 1	0.1227697536	108
349	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	l2 = 0	0.1227697536	108
350	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	$stack4 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l2)	0.1227697536	108
350	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	$stack5 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($stack4)	0.1227697536	108
350	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	if $stack5 != 0 goto l2 = l2 + 1	0.1227697536	108
351	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	return 0	0.1227697536	108
666	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.1214953271	115
667	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l3 = l2 - 1	0.1214953271	115
668	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l4 = lengthof l1	0.1214953271	115
669	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l5 = l4 - 1	0.1214953271	115
670	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	if l6 >= l2 goto return 1	0.1214953271	115
670	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l6 = 0	0.1214953271	115
833	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack5 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>(l0)	0.1214953271	115
833	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if $stack5 != 0 goto return 0	0.1214953271	115
416	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	goto [?= (branch)]	0.1176720476	120
416	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	l2 = l2 + 1	0.1176720476	120
186	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	return 0	0.1163976211	122
568	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l5 != 1 goto $stack25 = new java.lang.String	0.1163976211	122
1555	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>	if l0 < 97 goto $stack1 = 0	0.1134239592	125
1555	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>	return $stack1	0.1134239592	125
1619	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>	$stack2 = 0	0.1134239592	125
232	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isSeparator(char)>	if l0 != 92 goto $stack1 = 0	0.1121495327	129
232	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isSeparator(char)>	if l0 == 47 goto $stack1 = 1	0.1121495327	129
232	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isSeparator(char)>	return $stack1	0.1121495327	129
945	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= (branch)]	0.1121495327	129
945	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l7 = l7 + 1	0.1121495327	129
417	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	$stack5 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l2)	0.1070518267	134
417	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	$stack6 = staticinvoke <java.lang.Character: boolean isDigit(char)>($stack5)	0.1070518267	134
417	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	if $stack6 != 0 goto l2 = l2 + 1	0.1070518267	134
418	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	return 0	0.1070518267	134
568	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l7 != 2 goto $stack25 = new java.lang.String	0.1070518267	134
1555	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>	$stack1 = 0	0.1040781648	138
1812	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l0 < -999999999 goto $stack3 = new java.lang.IllegalArgumentException	0.1040781648	138
1812	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l0 <= 999999999 goto (branch)	0.1040781648	138
1815	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l1 < 1 goto $stack5 = new java.lang.IllegalArgumentException	0.1040781648	138
232	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isSeparator(char)>	$stack1 = 0	0.1028037383	154
502	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	$stack5 = virtualinvoke l0.<java.lang.String: int length()>()	0.1028037383	154
502	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	l1#2 = $stack5 - 1	0.1028037383	154
503	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	l2 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l1#2)	0.1028037383	154
505	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	if l2 != 10 goto (branch)	0.1028037383	154
509	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	if l2 == 13 goto $stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)	0.1028037383	154
510	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	l1#2 = l1#2 + 1	0.1028037383	154
512	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	$stack7 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1#2)	0.1028037383	154
512	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	return $stack7	0.1028037383	154
969	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack19 = l2 - 1	0.1028037383	154
969	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l5#11 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack19)	0.1028037383	154
973	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l9 = virtualinvoke l0.<java.lang.String: int indexOf(int)>(46)	0.1028037383	154
974	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack22 = virtualinvoke l0.<java.lang.String: int indexOf(int)>(101)	0.1028037383	154
974	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack23 = virtualinvoke l0.<java.lang.String: int indexOf(int)>(69)	0.1028037383	154
974	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack24 = $stack22 + $stack23	0.1028037383	154
974	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l10 = $stack24 + 1	0.1028037383	154
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack25 = staticinvoke <java.lang.Character: boolean isDigit(char)>(l5#11)	0.1028037383	154
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack25 != 0 goto $stack119 = 0	0.1028037383	154
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l11 = $stack119	0.1028037383	154
980	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l9 <= -1 goto (branch)	0.1028037383	154
1003	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l11 == 0 goto (branch)	0.1028037383	154
1115	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	l2 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.1028037383	154
1116	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	$stack7 = 0	0.1028037383	154
1116	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	if l2 != 43 goto $stack7 = 0	0.1028037383	154
1116	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	if l2 == 45 goto $stack7 = 1	0.1028037383	154
1118	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	$stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)	0.1028037383	154
1118	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	if $stack7 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l1)	0.1028037383	154
1118	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>	return $stack5	0.1028037383	154
1630	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isEmpty(char[])>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>(l0)	0.0947323704	169
1630	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isEmpty(char[])>	return $stack1	0.0947323704	169
491	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	return l0	0.0934579439	175
671	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l7 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l6)	0.0934579439	175
672	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	if l8 >= l4 goto l6 = l6 + 1	0.0934579439	175
672	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l8 = 0	0.0934579439	175
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>(l0)	0.0934579439	175
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	if $stack1 != 0 goto $stack3 = 1	0.0934579439	175
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	return $stack3	0.0934579439	175
1536	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>	if l0 > 90 goto $stack1 = 0	0.0934579439	175
1861	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	if l2 < 1 goto $stack8 = new java.lang.IllegalArgumentException	0.0934579439	175
219	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	return 0	0.0841121495	193
673	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	$stack13 = l1[l8]	0.0841121495	193
673	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	if $stack13 != l7 goto l8 = l8 + 1	0.0841121495	193
688	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	return 1	0.0841121495	193
833	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack6 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0841121495	193
833	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if $stack6 != 1 goto l1 = 0	0.0841121495	193
836	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l1 = 0	0.0841121495	193
837	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l2 = 0	0.0841121495	193
838	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l3 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0841121495	193
839	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	goto [?= (branch)]	0.0841121495	193
839	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if l4 >= l3 goto (branch)	0.0841121495	193
839	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l4 = 0	0.0841121495	193
839	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l4 = l4 + 1	0.0841121495	193
840	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if l1 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)	0.0841121495	193
843	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack10 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($stack9)	0.0841121495	193
843	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)	0.0841121495	193
843	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if $stack10 == 0 goto $stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)	0.0841121495	193
845	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack11 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)	0.0841121495	193
845	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack12 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($stack11)	0.0841121495	193
845	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if $stack12 == 0 goto l4 = l4 + 1	0.0841121495	193
1251	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if l0 != null goto $stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()	0.0841121495	193
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	$stack2 = staticinvoke <comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>(l0)	0.0841121495	193
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	if $stack2 == 0 goto $stack3 = 0	0.0841121495	193
1816	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	$stack5 = new java.lang.IllegalArgumentException	0.0841121495	193
1816	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	$stack6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(l1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("MONTH out of range: \u0001")	0.0841121495	193
1816	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack6)	0.0841121495	193
1816	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	throw $stack5	0.0841121495	193
269	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()	0.0815632965	223
270	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack11 = new java.util.ArrayList	0.0815632965	223
270	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	specialinvoke $stack11.<java.util.ArrayList: void <init>()>()	0.0815632965	223
271	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack12 = new java.lang.StringBuilder	0.0815632965	223
271	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()	0.0815632965	223
272	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l4 = 0	0.0815632965	223
273	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	goto [?= (branch)]	0.0815632965	223
273	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if l7 >= l6 goto $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()	0.0815632965	223
273	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l6 = lengthof l1	0.0815632965	223
273	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l7 = 0	0.0815632965	223
273	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l7 = l7 + 1	0.0815632965	223
273	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l8 = l1[l7]	0.0815632965	223
274	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if l8 != 42 goto virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)	0.0815632965	223
274	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if l8 == 63 goto $stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()	0.0815632965	223
275	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack20 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()	0.0815632965	223
275	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if $stack20 == 0 goto (branch)	0.0815632965	223
276	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack26 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()	0.0815632965	223
276	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	virtualinvoke $stack11.<java.util.ArrayList: boolean add(java.lang.Object)>($stack26)	0.0815632965	223
277	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	virtualinvoke $stack12.<java.lang.StringBuilder: void setLength(int)>(0)	0.0815632965	223
279	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if l8 != 63 goto (branch)	0.0815632965	223
281	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if l4 == 42 goto l4 = l8	0.0815632965	223
282	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	goto [?= l4 = l8]	0.0815632965	223
282	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	virtualinvoke $stack11.<java.util.ArrayList: boolean add(java.lang.Object)>("*")	0.0815632965	223
285	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(l8)	0.0815632965	223
287	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	l4 = l8	0.0815632965	223
289	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: int length()>()	0.0815632965	223
289	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if $stack13 == 0 goto $stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>	0.0815632965	223
290	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack17 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()	0.0815632965	223
290	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	virtualinvoke $stack11.<java.util.ArrayList: boolean add(java.lang.Object)>($stack17)	0.0815632965	223
293	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack14 = <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] EMPTY_STRING_ARRAY>	0.0815632965	223
293	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack15 = virtualinvoke $stack11.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($stack14)	0.0815632965	223
293	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack16 = (java.lang.String[]) $stack15	0.0815632965	223
293	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	return $stack16	0.0815632965	223
185	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack19 = virtualinvoke l6.<java.lang.String: int length()>()	0.0790144435	240
185	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack19 <= 4 goto l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)	0.0790144435	240
716	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>(l0, 1)	0.0777400170	242
716	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterTypeCamelCase(java.lang.String)>	return $stack1	0.0777400170	242
212	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	l1 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\.", -1)	0.0760407816	249
213	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack4 = lengthof l1	0.0760407816	249
213	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	if l2 >= $stack4 goto return 1	0.0760407816	249
213	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	l2 = 0	0.0760407816	249
214	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack5 = l1[l2]	0.0760407816	249
214	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack6 = virtualinvoke $stack5.<java.lang.String: boolean isEmpty()>()	0.0760407816	249
214	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	if $stack6 == 0 goto $stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>	0.0760407816	249
1334	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>(l0)	0.0760407816	249
1334	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	if $stack1 == 0 goto $stack2 = virtualinvoke l0.<java.lang.String: int length()>()	0.0760407816	249
1661	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if l2 >= 0 goto $stack4 = lengthof l0	0.0760407816	249
1815	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l1 <= 12 goto (branch)	0.0760407816	249
51	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	if l0 != 47 goto (branch)	0.0747663551	268
670	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	goto [?= (branch)]	0.0747663551	268
670	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l6 = l6 + 1	0.0747663551	268
840	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if l2 == 0 goto $stack9 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l4)	0.0747663551	268
844	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	goto [?= l4 = l4 + 1]	0.0747663551	268
844	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l1 = 1	0.0747663551	268
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack119 = 1	0.0747663551	268
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= l11 = $stack119]	0.0747663551	268
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l5#11 == 46 goto $stack119 = 0	0.0747663551	268
992	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 <= -1 goto (branch)	0.0747663551	268
999	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack119 == 0 goto $stack101 = l2	0.0747663551	268
999	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, $stack101)	0.0747663551	268
1001	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l7#20 = null	0.0747663551	268
1004	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 <= -1 goto l8 = null	0.0747663551	268
1010	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack60 = l2 - 1	0.0747663551	268
1010	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, $stack60)	0.0747663551	268
1012	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	lookupswitch(l5#11) {     case 68: goto l13#69 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Double createDouble(java.lang.String)>(l0);     case 70: goto l13#63 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0);     case 76: goto if l7#20 != null goto $stack62 = new java.lang.NumberFormatException;     case 100: goto l13#69 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Double createDouble(java.lang.String)>(l0);     case 102: goto l13#63 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0);     case 108: goto if l7#20 != null goto $stack62 = new java.lang.NumberFormatException;     default: goto $stack88 = new java.lang.NumberFormatException; }	0.0747663551	268
1215	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>	if l0 != null goto $stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)	0.0747663551	268
1234	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>	if l0 != null goto $stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)	0.0747663551	268
1254	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack6 = virtualinvoke l0.<java.lang.String: boolean isEmpty()>()	0.0747663551	268
1254	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if $stack6 == 0 goto l1 = 0	0.0747663551	268
1377	<comp5111.assignment.cut.Subject$NumberTasks: int compare(byte,byte)>	$stack2 = l0 - l1	0.0747663551	268
1377	<comp5111.assignment.cut.Subject$NumberTasks: int compare(byte,byte)>	return $stack2	0.0747663551	268
1862	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack8 = new java.lang.IllegalArgumentException	0.0747663551	268
1862	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(l2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Day out of range: \u0001")	0.0747663551	268
1862	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	specialinvoke $stack8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack9)	0.0747663551	268
1862	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	throw $stack8	0.0747663551	268
557	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack41 = <comp5111.assignment.cut.Subject$ArrayTasks: java.lang.String[] EMPTY_STRING_ARRAY>	0.0709430756	282
557	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	return $stack41	0.0709430756	282
1393	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	if l0 != l1 goto (branch)	0.0696686491	284
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	if l0 == null goto $stack2 = 1	0.0688190314	285
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	return $stack2	0.0688190314	285
1498	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiControl(char)>	$stack1 = 0	0.0666949873	288
1498	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiControl(char)>	if l0 != 127 goto $stack1 = 0	0.0666949873	288
1498	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiControl(char)>	if l0 < 32 goto $stack1 = 1	0.0666949873	288
1498	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiControl(char)>	return $stack1	0.0666949873	288
54	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	if l0 != 92 goto $stack1 = new java.lang.IllegalArgumentException	0.0654205607	306
57	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	$stack1 = new java.lang.IllegalArgumentException	0.0654205607	306
57	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	$stack2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(l0)	0.0654205607	306
57	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	specialinvoke $stack1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack2)	0.0654205607	306
57	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	throw $stack1	0.0654205607	306
618	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	goto [?= (branch)]	0.0654205607	306
618	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l6 = l6 + 1	0.0654205607	306
620	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	goto [?= (branch)]	0.0654205607	306
620	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l8 = l8 + 1	0.0654205607	306
672	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	goto [?= (branch)]	0.0654205607	306
672	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	l8 = l8 + 1	0.0654205607	306
841	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	return 1	0.0654205607	306
846	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	l2 = 1	0.0654205607	306
1007	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l8 = null	0.0654205607	306
1058	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack88 = new java.lang.NumberFormatException	0.0654205607	306
1058	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack89 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(l0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.")	0.0654205607	306
1058	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	specialinvoke $stack88.<java.lang.NumberFormatException: void <init>(java.lang.String)>($stack89)	0.0654205607	306
1058	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	throw $stack88	0.0654205607	306
1219	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>	$stack1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(l0)	0.0654205607	306
1237	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>	$stack1 = staticinvoke <java.lang.Long: java.lang.Long decode(java.lang.String)>(l0)	0.0654205607	306
1257	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l1 = 0	0.0654205607	306
1258	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l2 = 10	0.0654205607	306
1259	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l3 = 0	0.0654205607	306
1260	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l4 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.0654205607	306
1261	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if l4 != 45 goto (branch)	0.0654205607	306
1264	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if l4 != 43 goto $stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)	0.0654205607	306
1267	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack8 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0x", l1)	0.0654205607	306
1267	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if $stack8 != 0 goto l2 = 16	0.0654205607	306
1278	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack10 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l1)	0.0654205607	306
1278	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack9 = new java.math.BigInteger	0.0654205607	306
1278	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	specialinvoke $stack9.<java.math.BigInteger: void <init>(java.lang.String,int)>($stack10, l2)	0.0654205607	306
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	$stack3 = 0	0.0654205607	306
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	$stack2 = 0	0.0632965166	323
297	<comp5111.assignment.cut.Subject$StringTasks: void <init>()>	return	0.0615972812	324
297	<comp5111.assignment.cut.Subject$StringTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0615972812	324
176	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l4 = 0	0.0603228547	327
178	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack17 = lengthof l2	0.0603228547	327
178	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack18 = $stack17 - 1	0.0603228547	327
178	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l5 != $stack18 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()	0.0603228547	327
115	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv4Address(java.lang.String)>	$stack5 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern IPV4_PATTERN>	0.0573491929	346
115	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv4Address(java.lang.String)>	l1 = virtualinvoke $stack5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0)	0.0573491929	346
266	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack39 = newarray (java.lang.String)[1]	0.0573491929	346
266	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack39[0] = l0	0.0573491929	346
266	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	return $stack39	0.0573491929	346
494	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	$stack4 = virtualinvoke l0.<java.lang.String: int length()>()	0.0573491929	346
494	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	if $stack4 != 1 goto $stack5 = virtualinvoke l0.<java.lang.String: int length()>()	0.0573491929	346
611	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	$stack9 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>(l0)	0.0573491929	346
611	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	if $stack9 != 0 goto return 0	0.0573491929	346
1337	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack2 = virtualinvoke l0.<java.lang.String: int length()>()	0.0573491929	346
1337	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack3 = $stack2 - 1	0.0573491929	346
1337	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack4 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack3)	0.0573491929	346
1337	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	if $stack4 != 46 goto $stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.0573491929	346
1340	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack5 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.0573491929	346
1340	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	if $stack5 != 45 goto $stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)	0.0573491929	346
1350	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	l2 = 0	0.0573491929	346
1351	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	$stack5 = virtualinvoke l0.<java.lang.String: int length()>()	0.0573491929	346
1351	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	if l3 >= $stack5 goto return 1	0.0573491929	346
1351	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	l3 = l1	0.0573491929	346
1352	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	$stack13 = 0	0.0573491929	346
1352	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	$stack6 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l3)	0.0573491929	346
1352	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	if $stack6 != 46 goto $stack13 = 0	0.0573491929	346
1352	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	l4 = $stack13	0.0573491929	346
1353	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	if $stack13 == 0 goto (branch)	0.0573491929	346
1356	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	if l2 <= 1 goto (branch)	0.0573491929	346
1359	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	$stack10 = staticinvoke <java.lang.Character: boolean isDigit(char)>($stack9)	0.0573491929	346
1359	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	$stack9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l3)	0.0573491929	346
1359	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	if $stack10 != 0 goto l3 = l3 + 1	0.0573491929	346
1359	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	if l4 != 0 goto l3 = l3 + 1	0.0573491929	346
1360	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	return 0	0.0573491929	346
1460	<comp5111.assignment.cut.Subject$CharTasks: boolean isAscii(char)>	$stack1 = 1	0.0573491929	346
1460	<comp5111.assignment.cut.Subject$CharTasks: boolean isAscii(char)>	goto [?= return $stack1]	0.0573491929	346
1460	<comp5111.assignment.cut.Subject$CharTasks: boolean isAscii(char)>	if l0 >= 128 goto $stack1 = 0	0.0573491929	346
1460	<comp5111.assignment.cut.Subject$CharTasks: boolean isAscii(char)>	return $stack1	0.0573491929	346
347	<comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>	return 1	0.0560747664	373
636	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	return 0	0.0560747664	373
999	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack101 = l2 - 1	0.0560747664	373
999	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, $stack101)]	0.0560747664	373
1197	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Double createDouble(java.lang.String)>	if l0 != null goto $stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)	0.0560747664	373
1200	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Double createDouble(java.lang.String)>	$stack1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(l0)	0.0560747664	373
1267	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack12 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0X", l1)	0.0560747664	373
1267	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if $stack12 == 0 goto $stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)	0.0560747664	373
1270	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack13 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("#", l1)	0.0560747664	373
1270	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if $stack13 == 0 goto $stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)	0.0560747664	373
1273	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack14 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>("0", l1)	0.0560747664	373
1273	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if $stack14 == 0 goto $stack9 = new java.math.BigInteger	0.0560747664	373
1400	<comp5111.assignment.cut.Subject$CharTasks: void <init>()>	return	0.0560747664	373
1400	<comp5111.assignment.cut.Subject$CharTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0560747664	373
1555	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>	if l0 > 122 goto $stack1 = 0	0.0560747664	373
1574	<comp5111.assignment.cut.Subject$ArrayTasks: void <init>()>	return	0.0560747664	373
1574	<comp5111.assignment.cut.Subject$ArrayTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0560747664	373
1641	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isEmpty(int[])>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>(l0)	0.0560747664	373
1641	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isEmpty(int[])>	return $stack1	0.0560747664	373
1760	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 9 goto return 30	0.0560747664	373
144	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l1 = virtualinvoke l0.<java.lang.String: boolean contains(java.lang.CharSequence)>("::")	0.0509770603	392
145	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l1 == 0 goto $stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")	0.0509770603	392
148	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack10 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>(":")	0.0509770603	392
148	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack10 == 0 goto $stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")	0.0509770603	392
149	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack11 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>(":")	0.0509770603	392
149	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack11 == 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")	0.0509770603	392
152	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")	0.0509770603	392
153	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l1 == 0 goto $stack13 = lengthof l2	0.0509770603	392
163	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack13 = lengthof l2	0.0509770603	392
163	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack13 <= 8 goto l3#27 = 0	0.0509770603	392
166	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l3#27 = 0	0.0509770603	392
167	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l4 = 0	0.0509770603	392
168	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack14 = lengthof l2	0.0509770603	392
168	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l5 >= $stack14 goto (branch)	0.0509770603	392
168	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l5 = 0	0.0509770603	392
169	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l6 = l2[l5]	0.0509770603	392
170	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack16 = virtualinvoke l6.<java.lang.String: boolean isEmpty()>()	0.0509770603	392
170	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack16 == 0 goto l4 = 0	0.0509770603	392
100	<comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>	if l0 != null goto l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)	0.0497026338	404
103	<comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>	l1 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(47)	0.0497026338	404
104	<comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>	l2 = virtualinvoke l0.<java.lang.String: int lastIndexOf(int)>(92)	0.0497026338	404
105	<comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>	$stack5 = staticinvoke <java.lang.Math: int max(int,int)>(l1, l2)	0.0497026338	404
105	<comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>	return $stack5	0.0497026338	404
116	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv4Address(java.lang.String)>	$stack7 = virtualinvoke l1.<java.util.regex.Matcher: boolean matches()>()	0.0480033985	409
116	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv4Address(java.lang.String)>	if $stack7 == 0 goto return 0	0.0480033985	409
117	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv4Address(java.lang.String)>	return 0	0.0480033985	409
1346	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack6 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 0)	0.0480033985	409
1346	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	return $stack6	0.0480033985	409
834	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	return 0	0.0467289720	415
1292	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)	0.0467289720	415
1680	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	return -1	0.0467289720	415
1684	<comp5111.assignment.cut.Subject$GregorianTasks: void <init>()>	return	0.0467289720	415
1684	<comp5111.assignment.cut.Subject$GregorianTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0467289720	415
1760	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 != 11 goto (branch)	0.0467289720	415
1761	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 != 2 goto $stack4 = new java.lang.IllegalArgumentException	0.0467289720	415
1861	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	if l2 <= 31 goto $stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)	0.0467289720	415
495	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	l1 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)	0.0454545455	422
496	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	if l1 != 10 goto return l0	0.0454545455	422
496	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	if l1 == 13 goto return ""	0.0454545455	422
499	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chomp(java.lang.String)>	return l0	0.0454545455	422
554	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	return null	0.0454545455	422
1396	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	$stack2 = 1	0.0441801189	425
1396	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	goto [?= return $stack2]	0.0441801189	425
743	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	return 1	0.0429056924	427
84	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)	0.0416312659	431
84	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	$stack2 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>(l0)	0.0416312659	431
84	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	$stack3 = $stack2 + 1	0.0416312659	431
84	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	$stack4 = virtualinvoke $stack1.<java.lang.String: java.lang.String substring(int)>($stack3)	0.0416312659	431
84	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	return $stack4	0.0416312659	431
245	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>	$stack1 = virtualinvoke l0.<java.lang.String: int indexOf(int)>(0)	0.0416312659	431
245	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>	if $stack1 < 0 goto return l0	0.0416312659	431
249	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>	return l0	0.0416312659	431
863	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	if l0 == null goto return l0	0.0399320306	436
1661	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if l0 == null goto return -1	0.0399320306	436
218	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack10 = virtualinvoke $stack9.<java.util.regex.Matcher: boolean matches()>()	0.0386576041	443
218	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack7 = l1[l2]	0.0386576041	443
218	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack8 = <comp5111.assignment.cut.Subject$FilenameTasks: java.util.regex.Pattern REG_NAME_PART_PATTERN>	0.0386576041	443
218	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack9 = virtualinvoke $stack8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack7)	0.0386576041	443
218	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	if $stack10 != 0 goto l2 = l2 + 1	0.0386576041	443
413	<comp5111.assignment.cut.Subject$StringTasks: boolean isNumeric(java.lang.CharSequence)>	return 0	0.0386576041	443
1569	<comp5111.assignment.cut.Subject$CharTasks: int compare(char,char)>	$stack2 = l0 - l1	0.0386576041	443
1569	<comp5111.assignment.cut.Subject$CharTasks: int compare(char,char)>	return $stack2	0.0386576041	443
1664	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack4 = lengthof l0	0.0386576041	443
1664	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if l2 < $stack4 goto (branch)	0.0386576041	443
1667	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if l1 != null goto $stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()	0.0386576041	443
190	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(l6, 16)	0.0373831776	459
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack13 = lengthof l1	0.0373831776	459
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack14 = $stack13 - 1	0.0373831776	459
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	if l2 != $stack14 goto $stack15 = 0	0.0373831776	459
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	return $stack15	0.0373831776	459
612	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	return 0	0.0373831776	459
674	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	$stack16 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(l7)	0.0373831776	459
674	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	if $stack16 != 0 goto (branch)	0.0373831776	459
676	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	return 0	0.0373831776	459
792	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	return l0	0.0373831776	459
1181	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>	if l0 != null goto $stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)	0.0373831776	459
1296	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	$stack1 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: boolean isBlank(java.lang.CharSequence)>(l0)	0.0373831776	459
1296	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	if $stack1 == 0 goto $stack2 = new java.math.BigDecimal	0.0373831776	459
1555	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>	$stack1 = 1	0.0373831776	459
1555	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaLower(char)>	goto [?= return $stack1]	0.0373831776	459
1674	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	goto [?= (branch)]	0.0373831776	459
1674	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	l3 = l3 + -1	0.0373831776	459
1762	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	$stack4 = new java.lang.IllegalArgumentException	0.0373831776	459
1762	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	$stack5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(l1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid month: \u0001")	0.0373831776	459
1762	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	specialinvoke $stack4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack5)	0.0373831776	459
1762	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	throw $stack4	0.0373831776	459
222	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	return 1	0.0361087511	472
622	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	$stack18 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(l7)	0.0361087511	472
622	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	if $stack18 != 0 goto (branch)	0.0361087511	472
624	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	return 1	0.0361087511	472
1760	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	return 30	0.0361087511	472
569	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l8 = l6 - 1	0.0348343246	477
570	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	if l8 == l4 goto (branch)	0.0348343246	477
574	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	goto [?= l5 = l7]	0.0348343246	477
1396	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	if l0 == 0 goto $stack2 = -1	0.0348343246	477
1396	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	return $stack2	0.0348343246	477
265	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack32 = virtualinvoke l0.<java.lang.String: int indexOf(int)>(42)	0.0335598980	480
265	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if $stack32 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()	0.0335598980	480
81	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	if l0 != null goto $stack1 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String requireNonNullChars(java.lang.String)>(l0)	0.0322854715	482
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	$stack1 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0314358539	483
377	<comp5111.assignment.cut.Subject$StringTasks: boolean isEmpty(java.lang.CharSequence)>	if $stack1 != 0 goto $stack2 = 0	0.0314358539	483
790	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	l2 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>(l0)	0.0305862362	487
791	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	if l2 != 0 goto (branch)	0.0305862362	487
863	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	if l1 == null goto return l0	0.0305862362	487
1479	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiPrintable(char)>	if l0 < 32 goto $stack1 = 0	0.0305862362	487
1479	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiPrintable(char)>	return $stack1	0.0305862362	487
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 1 goto return 31	0.0305862362	487
453	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	return ""	0.0293118097	496
611	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	$stack10 = staticinvoke <comp5111.assignment.cut.Subject$ArrayTasks: boolean isEmpty(char[])>(l1)	0.0293118097	496
611	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	if $stack10 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0293118097	496
900	<comp5111.assignment.cut.Subject$NumberTasks: void <init>()>	return	0.0293118097	496
900	<comp5111.assignment.cut.Subject$NumberTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0293118097	496
1441	<comp5111.assignment.cut.Subject$CharTasks: char toChar(java.lang.Character,char)>	if l0 == null goto $stack2 = l1	0.0293118097	496
1441	<comp5111.assignment.cut.Subject$CharTasks: char toChar(java.lang.Character,char)>	return $stack2	0.0293118097	496
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 3 goto return 31	0.0293118097	496
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 5 goto return 31	0.0293118097	496
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	return 31	0.0293118097	496
1818	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l2 < 1 goto $stack7 = new java.lang.IllegalArgumentException	0.0293118097	496
168	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	goto [?= $stack14 = lengthof l2]	0.0280373832	524
168	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l5 = l5 + 1	0.0280373832	524
192	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	return 0	0.0280373832	524
198	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l3#27 = l3#27 + 1	0.0280373832	524
200	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack15 = 0	0.0280373832	524
200	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l1 == 0 goto $stack15 = 0	0.0280373832	524
200	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l3#27 > 8 goto $stack15 = 0	0.0280373832	524
200	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l3#27 >= 8 goto $stack15 = 1	0.0280373832	524
200	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	return $stack15	0.0280373832	524
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack15 = 1	0.0280373832	524
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	goto [?= return $stack15]	0.0280373832	524
323	<comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>	$stack1 = 0	0.0280373832	524
323	<comp5111.assignment.cut.Subject$StringTasks: int length(java.lang.CharSequence)>	goto [?= return $stack1]	0.0280373832	524
664	<comp5111.assignment.cut.Subject$StringTasks: boolean containsNone(java.lang.CharSequence,char[])>	return 1	0.0280373832	524
745	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if l0 == null goto return 0	0.0280373832	524
864	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	return l0	0.0280373832	524
938	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack151 = new java.lang.NumberFormatException	0.0280373832	524
938	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	specialinvoke $stack151.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number")	0.0280373832	524
938	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	throw $stack151	0.0280373832	524
947	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack141 = virtualinvoke l8.<java.lang.String: int length()>()	0.0280373832	524
947	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack142 = $stack141 + l3	0.0280373832	524
947	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l4 = 0 + $stack142	0.0280373832	524
948	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= (branch)]	0.0280373832	524
952	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l5#11 = 0	0.0280373832	524
953	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l6 >= l2 goto l6 = l2 - l4	0.0280373832	524
953	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l6 = l4	0.0280373832	524
954	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l5#11 = virtualinvoke l0.<java.lang.String: char charAt(int)>(l6)	0.0280373832	524
955	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l5#11 == 48 goto l4 = l4 + 1	0.0280373832	524
956	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= l6 = l2 - l4]	0.0280373832	524
960	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l6 = l2 - l4	0.0280373832	524
961	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l6 > 16 goto $stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)	0.0280373832	524
979	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack119 = 0	0.0280373832	524
981	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 <= -1 goto $stack107 = l9 + 1	0.0280373832	524
990	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= (branch)]	0.0280373832	524
990	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l9)	0.0280373832	524
1063	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 <= -1 goto l8 = null	0.0280373832	524
1066	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l8 = null	0.0280373832	524
1068	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l7#20 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)	0.0280373832	524
1184	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>	$stack1 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(l0)	0.0280373832	524
1299	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	$stack2 = new java.math.BigDecimal	0.0280373832	524
1299	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	specialinvoke $stack2.<java.math.BigDecimal: void <init>(java.lang.String)>(l0)	0.0280373832	524
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	$stack3 = 1	0.0280373832	524
1517	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlpha(char)>	goto [?= return $stack3]	0.0280373832	524
1619	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>	$stack2 = 1	0.0280373832	524
1619	<comp5111.assignment.cut.Subject$ArrayTasks: boolean isArrayEmpty(java.lang.Object)>	goto [?= return $stack2]	0.0280373832	524
878	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	goto [?= return l0#4]	0.0267629567	548
878	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	l0#4 = l2	0.0267629567	548
890	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	return l0#4	0.0267629567	548
803	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	goto [?= (branch)]	0.0254885302	550
803	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	l2 = l2 + -1	0.0254885302	550
12	<comp5111.assignment.cut.Subject: void <init>()>	return	0.0242141037	554
12	<comp5111.assignment.cut.Subject: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0242141037	554
178	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack24 = virtualinvoke l6.<java.lang.String: boolean contains(java.lang.CharSequence)>(".")	0.0242141037	554
178	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack24 == 0 goto $stack19 = virtualinvoke l6.<java.lang.String: int length()>()	0.0242141037	554
265	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	if $stack9 != -1 goto l1 = virtualinvoke l0.<java.lang.String: char[] toCharArray()>()	0.0242141037	554
863	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	if l2 != null goto l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)	0.0212404418	558
1479	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiPrintable(char)>	$stack1 = 1	0.0212404418	558
1479	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiPrintable(char)>	goto [?= return $stack1]	0.0212404418	558
1479	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiPrintable(char)>	if l0 >= 127 goto $stack1 = 0	0.0212404418	558
614	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0199660153	571
615	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l3 = lengthof l1	0.0199660153	571
616	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l4 = l2 - 1	0.0199660153	571
617	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l5 = l3 - 1	0.0199660153	571
618	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	if l6 >= l2 goto return 0	0.0199660153	571
618	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l6 = 0	0.0199660153	571
619	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l7 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l6)	0.0199660153	571
620	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	if l8 >= l3 goto l6 = l6 + 1	0.0199660153	571
620	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	l8 = 0	0.0199660153	571
621	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	$stack15 = l1[l8]	0.0199660153	571
621	<comp5111.assignment.cut.Subject$StringTasks: boolean containsAny(java.lang.CharSequence,char[])>	if $stack15 != l7 goto l8 = l8 + 1	0.0199660153	571
870	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	return l0	0.0199660153	571
1665	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack14 = lengthof l0	0.0199660153	571
1665	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	l2 = $stack14 - 1	0.0199660153	571
1673	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack5 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()	0.0199660153	571
1673	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.Class getComponentType()>()	0.0199660153	571
1673	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack7 = virtualinvoke $stack6.<java.lang.Class: boolean isInstance(java.lang.Object)>(l1)	0.0199660153	571
1673	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if $stack7 == 0 goto return -1	0.0199660153	571
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 10 goto return 31	0.0199660153	571
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 7 goto return 31	0.0199660153	571
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 8 goto return 31	0.0199660153	571
1818	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l2 <= 31 goto $stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)	0.0199660153	571
14	<comp5111.assignment.cut.Subject$FilenameTasks: void <init>()>	return	0.0186915888	615
14	<comp5111.assignment.cut.Subject$FilenameTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0186915888	615
150	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	return 0	0.0186915888	615
171	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	l4 = l4 + 1	0.0186915888	615
172	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l4 <= 1 goto l3#27 = l3#27 + 1	0.0186915888	615
179	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack27 = staticinvoke <comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv4Address(java.lang.String)>(l6)	0.0186915888	615
179	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack27 != 0 goto l3#27 = l3#27 + 2	0.0186915888	615
180	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	return 0	0.0186915888	615
745	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if l1 != null goto $stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0186915888	615
748	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	$stack4 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0186915888	615
748	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	$stack5 = interfaceinvoke l1.<java.lang.CharSequence: int length()>()	0.0186915888	615
748	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if $stack4 == $stack5 goto $stack6 = l0 instanceof java.lang.String	0.0186915888	615
749	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	return 0	0.0186915888	615
800	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	return l0	0.0186915888	615
849	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	$stack8 = 0	0.0186915888	615
849	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if l1 == 0 goto $stack8 = 0	0.0186915888	615
849	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	return $stack8	0.0186915888	615
880	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	if l6 != l4 goto $stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)	0.0186915888	615
885	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	$stack12 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l3)	0.0186915888	615
887	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	$stack13 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int)>(l6)	0.0186915888	615
887	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	$stack14 = staticinvoke <comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>($stack13, l1, l2)	0.0186915888	615
961	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l6 != 16 goto (branch)	0.0186915888	615
964	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l6 > 8 goto $stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)	0.0186915888	615
965	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack123 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)	0.0186915888	615
988	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack107 = l9 + 1	0.0186915888	615
988	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack119 == 0 goto $stack110 = l2	0.0186915888	615
988	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l7#20 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>($stack107, $stack110)	0.0186915888	615
999	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack101 = l2	0.0186915888	615
1068	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l8 != null goto l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)	0.0186915888	615
1071	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack54 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>(l0)	0.0186915888	615
1335	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	return 0	0.0186915888	615
1441	<comp5111.assignment.cut.Subject$CharTasks: char toChar(java.lang.Character,char)>	$stack2 = l1	0.0186915888	615
1536	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>	$stack1 = 1	0.0186915888	615
1536	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiAlphaUpper(char)>	goto [?= return $stack1]	0.0186915888	615
1609	<comp5111.assignment.cut.Subject$ArrayTasks: int getLength(java.lang.Object)>	$stack1 = 0	0.0186915888	615
1668	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if l3 < 0 goto (branch)	0.0186915888	615
1668	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	l3 = l2	0.0186915888	615
1669	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack12 = l0[l3]	0.0186915888	615
1669	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if $stack12 != null goto l3 = l3 + -1	0.0186915888	615
1819	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	$stack7 = new java.lang.IllegalArgumentException	0.0186915888	615
1819	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	$stack8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(l2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("DAY_OF_MONTH out of range: \u0001")	0.0186915888	615
1819	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	specialinvoke $stack7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack8)	0.0186915888	615
1819	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	throw $stack7	0.0186915888	615
1864	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack10 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)	0.0186915888	615
1864	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	if l2 <= $stack10 goto l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)	0.0186915888	615
1870	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	l3 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>(l1)	0.0186915888	615
1871	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	l4 = l0 % 100	0.0186915888	615
1872	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	l5 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l0, 100)	0.0186915888	615
1874	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	if l4 >= 0 goto (branch)	0.0186915888	615
1878	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	if l1 > 2 goto l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)	0.0186915888	615
1887	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	l6 = staticinvoke <java.lang.Math: int floorDiv(int,int)>(l5, 4)	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack14 = l2 + l3	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack15 = l4 / 4	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack16 = $stack14 + l4	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack17 = $stack16 + $stack15	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack18 = 2 * l5	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack19 = $stack17 + l6	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	$stack20 = $stack19 - $stack18	0.0186915888	615
1888	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	l7 = $stack20 % 7	0.0186915888	615
1890	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	if l7 > 0 goto return l7	0.0186915888	615
1894	<comp5111.assignment.cut.Subject$GregorianTasks: int getDayOfWeek(int,int,int)>	return l7	0.0186915888	615
1922	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 1 goto (branch)	0.0186915888	615
1923	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 2 goto (branch)	0.0186915888	615
1924	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 3 goto (branch)	0.0186915888	615
1925	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 4 goto (branch)	0.0186915888	615
1926	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 5 goto (branch)	0.0186915888	615
213	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	goto [?= $stack4 = lengthof l1]	0.0174171623	650
213	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	l2 = l2 + 1	0.0174171623	650
1676	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	return l3	0.0174171623	650
802	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	$stack6 = l2 - 1	0.0161427358	655
802	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	$stack7 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack6)	0.0161427358	655
802	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	$stack8 = virtualinvoke l1.<java.lang.String: int indexOf(int)>($stack7)	0.0161427358	655
802	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	if $stack8 == -1 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)	0.0161427358	655
802	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	if l2 == 0 goto $stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)	0.0161427358	655
806	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	$stack5 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>(0, l2)	0.0161427358	655
806	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	return $stack5	0.0161427358	655
1394	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	return 0	0.0161427358	655
742	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if l0 != l1 goto (branch)	0.0148683093	660
867	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	l3 = virtualinvoke l0.<java.lang.String: int indexOf(java.lang.String)>(l1)	0.0118946474	661
869	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	if l3 >= 0 goto l4 = virtualinvoke l0.<java.lang.String: int length()>()	0.0118946474	661
1441	<comp5111.assignment.cut.Subject$CharTasks: char toChar(java.lang.Character,char)>	$stack2 = virtualinvoke l0.<java.lang.Character: char charValue()>()	0.0106202209	667
1441	<comp5111.assignment.cut.Subject$CharTasks: char toChar(java.lang.Character,char)>	goto [?= return $stack2]	0.0106202209	667
1674	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if l3 < 0 goto return -1	0.0106202209	667
1674	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	l3 = l2	0.0106202209	667
1759	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 != 12 goto (branch)	0.0106202209	667
1760	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 4 goto return 30	0.0106202209	667
1760	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if l1 == 6 goto return 30	0.0106202209	667
1821	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	$stack9 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>(l0, l1)	0.0106202209	667
1821	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	if l2 <= $stack9 goto return	0.0106202209	667
1827	<comp5111.assignment.cut.Subject$GregorianTasks: void checkDate(int,int,int)>	return	0.0106202209	667
52	<comp5111.assignment.cut.Subject$FilenameTasks: char flipSeparator(char)>	return 92	0.0093457944	731
82	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String getName(java.lang.String)>	return null	0.0093457944	731
101	<comp5111.assignment.cut.Subject$FilenameTasks: int indexOfLastSeparator(java.lang.String)>	return -1	0.0093457944	731
148	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack45 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String)>("::")	0.0093457944	731
148	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack45 == 0 goto return 0	0.0093457944	731
149	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	$stack41 = virtualinvoke l0.<java.lang.String: boolean endsWith(java.lang.String)>("::")	0.0093457944	731
149	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if $stack41 != 0 goto l2 = virtualinvoke l0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":")	0.0093457944	731
193	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	goto [?= (branch)]	0.0093457944	731
194	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l7 < 0 goto return 0	0.0093457944	731
194	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isIPv6Address(java.lang.String)>	if l7 <= 65535 goto l3#27 = l3#27 + 1	0.0093457944	731
216	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isRFC3986HostName(java.lang.String)>	$stack15 = 0	0.0093457944	731
232	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isSeparator(char)>	$stack1 = 1	0.0093457944	731
232	<comp5111.assignment.cut.Subject$FilenameTasks: boolean isSeparator(char)>	goto [?= return $stack1]	0.0093457944	731
280	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	goto [?= l4 = l8]	0.0093457944	731
280	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	virtualinvoke $stack11.<java.util.ArrayList: boolean add(java.lang.Object)>("?")	0.0093457944	731
449	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String chop(java.lang.String)>	return null	0.0093457944	731
571	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack38 = new java.lang.String	0.0093457944	731
571	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	$stack39 = l8 - l4	0.0093457944	731
571	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	interfaceinvoke $stack11.<java.util.List: boolean add(java.lang.Object)>($stack38)	0.0093457944	731
571	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	specialinvoke $stack38.<java.lang.String: void <init>(char[],int,int)>(l2, l4, $stack39)	0.0093457944	731
572	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String[] splitByCharacterType(java.lang.String,boolean)>	l4 = l8	0.0093457944	731
746	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	return 0	0.0093457944	731
751	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	$stack12 = l1 instanceof java.lang.String	0.0093457944	731
751	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	$stack6 = l0 instanceof java.lang.String	0.0093457944	731
751	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if $stack12 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0093457944	731
751	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if $stack6 == 0 goto l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0093457944	731
755	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	l2 = interfaceinvoke l0.<java.lang.CharSequence: int length()>()	0.0093457944	731
756	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	goto [?= (branch)]	0.0093457944	731
756	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if l3 >= l2 goto return 1	0.0093457944	731
756	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	l3 = 0	0.0093457944	731
756	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	l3 = l3 + 1	0.0093457944	731
757	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	$stack8 = interfaceinvoke l0.<java.lang.CharSequence: char charAt(int)>(l3)	0.0093457944	731
757	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	$stack9 = interfaceinvoke l1.<java.lang.CharSequence: char charAt(int)>(l3)	0.0093457944	731
757	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	if $stack8 == $stack9 goto l3 = l3 + 1	0.0093457944	731
761	<comp5111.assignment.cut.Subject$StringTasks: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>	return 1	0.0093457944	731
849	<comp5111.assignment.cut.Subject$StringTasks: boolean isMixedCase(java.lang.CharSequence)>	if l2 == 0 goto $stack8 = 0	0.0093457944	731
935	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	return null	0.0093457944	731
962	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack122 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)	0.0093457944	731
982	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 < l9 goto $stack114 = new java.lang.NumberFormatException	0.0093457944	731
982	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 <= l2 goto $stack116 = l9 + 1	0.0093457944	731
985	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack116 = l9 + 1	0.0093457944	731
985	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= l6#28 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.String getMantissa(java.lang.String,int)>(l0, l9)]	0.0093457944	731
985	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l7#20 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>($stack116, l10)	0.0093457944	731
988	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack110 = l2	0.0093457944	731
988	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack110 = l2 - 1	0.0093457944	731
988	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= l7#20 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>($stack107, $stack110)]	0.0093457944	731
1004	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack90 = l2 - 1	0.0093457944	731
1004	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l10 >= $stack90 goto l8 = null	0.0093457944	731
1005	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack97 = l2 - 1	0.0093457944	731
1005	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack98 = l10 + 1	0.0093457944	731
1005	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	goto [?= $stack60 = l2 - 1]	0.0093457944	731
1005	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l8 = virtualinvoke l0.<java.lang.String: java.lang.String substring(int,int)>($stack98, $stack97)	0.0093457944	731
1015	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l7#20 != null goto $stack62 = new java.lang.NumberFormatException	0.0093457944	731
1015	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if l8 != null goto $stack62 = new java.lang.NumberFormatException	0.0093457944	731
1017	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack65 = virtualinvoke l12.<java.lang.String: boolean isEmpty()>()	0.0093457944	731
1017	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)	0.0093457944	731
1017	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack68 = virtualinvoke l12.<java.lang.String: char charAt(int)>(0)	0.0093457944	731
1017	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack65 != 0 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)	0.0093457944	731
1017	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack66 == 0 goto $stack62 = new java.lang.NumberFormatException	0.0093457944	731
1017	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	if $stack68 != 45 goto $stack66 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean isDigits(java.lang.String)>(l12)	0.0093457944	731
1026	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack62 = new java.lang.NumberFormatException	0.0093457944	731
1026	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack63 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(l0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid number.")	0.0093457944	731
1026	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	specialinvoke $stack62.<java.lang.NumberFormatException: void <init>(java.lang.String)>($stack63)	0.0093457944	731
1026	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	throw $stack62	0.0093457944	731
1030	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l13#63 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)	0.0093457944	731
1044	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l13#69 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Double createDouble(java.lang.String)>(l0)	0.0093457944	731
1052	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack77 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l12)	0.0093457944	731
1071	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	return $stack54	0.0093457944	731
1076	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack157 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>(l0)	0.0093457944	731
1080	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack155 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>(l0)	0.0093457944	731
1085	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	l12#81 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>(l0)	0.0093457944	731
1102	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Number createNumber(java.lang.String)>	$stack31 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>(l0)	0.0093457944	731
1182	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Float createFloat(java.lang.String)>	return null	0.0093457944	731
1198	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Double createDouble(java.lang.String)>	return null	0.0093457944	731
1216	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>	return null	0.0093457944	731
1219	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Integer createInteger(java.lang.String)>	return $stack1	0.0093457944	731
1235	<comp5111.assignment.cut.Subject$NumberTasks: java.lang.Long createLong(java.lang.String)>	return null	0.0093457944	731
1252	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	return null	0.0093457944	731
1255	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack25 = new java.lang.NumberFormatException	0.0093457944	731
1255	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	specialinvoke $stack25.<java.lang.NumberFormatException: void <init>(java.lang.String)>("An empty string is not a valid number")	0.0093457944	731
1255	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	throw $stack25	0.0093457944	731
1265	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l1 = 1	0.0093457944	731
1268	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l2 = 16	0.0093457944	731
1269	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	goto [?= $stack9 = new java.math.BigInteger]	0.0093457944	731
1269	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	l1 = l1 + 2	0.0093457944	731
1273	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack19 = virtualinvoke l0.<java.lang.String: int length()>()	0.0093457944	731
1273	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack20 = l1 + 1	0.0093457944	731
1273	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if $stack19 <= $stack20 goto $stack9 = new java.math.BigInteger	0.0093457944	731
1279	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	$stack11 = $stack9	0.0093457944	731
1279	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	if l3 == 0 goto $stack11 = $stack9	0.0093457944	731
1279	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigInteger createBigInteger(java.lang.String)>	return $stack11	0.0093457944	731
1293	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	return null	0.0093457944	731
1297	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	$stack3 = new java.lang.NumberFormatException	0.0093457944	731
1297	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	specialinvoke $stack3.<java.lang.NumberFormatException: void <init>(java.lang.String)>("A blank string is not a valid number")	0.0093457944	731
1297	<comp5111.assignment.cut.Subject$NumberTasks: java.math.BigDecimal createBigDecimal(java.lang.String)>	throw $stack3	0.0093457944	731
1341	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack7 = virtualinvoke l0.<java.lang.String: int length()>()	0.0093457944	731
1341	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	if $stack7 != 1 goto $stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)	0.0093457944	731
1344	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	$stack8 = staticinvoke <comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>(l0, 1)	0.0093457944	731
1344	<comp5111.assignment.cut.Subject$NumberTasks: boolean isParsable(java.lang.String)>	return $stack8	0.0093457944	731
1351	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	goto [?= $stack5 = virtualinvoke l0.<java.lang.String: int length()>()]	0.0093457944	731
1351	<comp5111.assignment.cut.Subject$NumberTasks: boolean withDecimalsParsing(java.lang.String,int)>	l3 = l3 + 1	0.0093457944	731
1396	<comp5111.assignment.cut.Subject$BooleanTasks: int compare(boolean,boolean)>	$stack2 = -1	0.0093457944	731
1479	<comp5111.assignment.cut.Subject$CharTasks: boolean isAsciiPrintable(char)>	$stack1 = 0	0.0093457944	731
1668	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	goto [?= (branch)]	0.0093457944	731
1668	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	goto [?= return -1]	0.0093457944	731
1668	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	l3 = l3 + -1	0.0093457944	731
1670	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	return l3	0.0093457944	731
1761	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	$stack6 = staticinvoke <comp5111.assignment.cut.Subject$GregorianTasks: boolean isLeapYear(int)>(l0)	0.0093457944	731
1761	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	$stack7 = 29	0.0093457944	731
1761	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	goto [?= return $stack7]	0.0093457944	731
1761	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	if $stack6 == 0 goto $stack7 = 28	0.0093457944	731
1761	<comp5111.assignment.cut.Subject$GregorianTasks: int getLengthOfMonth(int,int)>	return $stack7	0.0093457944	731
1926	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	return 7	0.0093457944	731
1927	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 6 goto (branch)	0.0093457944	731
1928	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 7 goto (branch)	0.0093457944	731
1929	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 8 goto (branch)	0.0093457944	731
1930	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	if l0 != 9 goto (branch)	0.0093457944	731
1930	<comp5111.assignment.cut.Subject$GregorianTasks: int gaussianWeekTerm(int)>	return 18	0.0093457944	731
873	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	l4 = virtualinvoke l0.<java.lang.String: int length()>()	0.0080713679	794
875	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	$stack10 = virtualinvoke l1.<java.lang.String: int length()>()	0.0080713679	794
875	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	l6 = l3 + $stack10	0.0080713679	794
877	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	$stack11 = virtualinvoke l1.<java.lang.String: int length()>()	0.0080713679	794
877	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String replace(java.lang.String,java.lang.String,java.lang.String)>	if l4 != $stack11 goto (branch)	0.0080713679	794
1381	<comp5111.assignment.cut.Subject$BooleanTasks: void <init>()>	return	0.0080713679	794
1381	<comp5111.assignment.cut.Subject$BooleanTasks: void <init>()>	specialinvoke l0.<java.lang.Object: void <init>()>()	0.0080713679	794
795	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	if l1 != null goto $stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()	0.0067969414	799
799	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	$stack4 = virtualinvoke l1.<java.lang.String: boolean isEmpty()>()	0.0067969414	799
799	<comp5111.assignment.cut.Subject$StringTasks: java.lang.String stripEnd(java.lang.String,java.lang.String)>	if $stack4 == 0 goto (branch)	0.0067969414	799
265	<comp5111.assignment.cut.Subject$FilenameTasks: java.lang.String[] splitOnTokens(java.lang.String)>	$stack9 = virtualinvoke l0.<java.lang.String: int indexOf(int)>(63)	0.0055225149	801
1662	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	return -1	0.0012744265	803
1675	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack10 = virtualinvoke l1.<java.lang.Object: boolean equals(java.lang.Object)>($stack9)	0.0012744265	803
1675	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	$stack9 = l0[l3]	0.0012744265	803
1675	<comp5111.assignment.cut.Subject$ArrayTasks: int lastIndexOf(java.lang.Object[],java.lang.Object,int)>	if $stack10 == 0 goto l3 = l3 + -1	0.0012744265	803
